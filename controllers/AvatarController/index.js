const db = require('$db');
const service_email = require("$services/Mail/index");
const JWT = require('jsonwebtoken')

/**
 * @generator controller generated by kraaken-cli
 * @param req
 * @param res
 * @description AvatarController
 * @type {Express}
 */
const AvatarController = async (req, res) => {

    try {
        if(! req.files.avatar){
            return res.status(400).json({
                error: "",
                message: "No file to upload provided"
            });
        }

        const acceptedMimeTypes = ['image/jpeg', 'image/png', 'image/gif'];

        if(! acceptedMimeTypes.includes(req.files.avatar.mimetype)){
            return res.status(400).json({
                error: "",
                message: "File type not accepted"
            });
        }

        const token = req.headers.authorization.split(' ')[1];
        const decoded = JWT.verify(token, process.env.JWT_SECRET);

        if(!decoded || !decoded.uuid) {
            return res.status(400).json({
                error: '',
                message: 'Token invalid'
            });
        }

        const user = await db.user.findUnique({
            where: {
                uuid: decoded.uuid
            }
        });

        if(!user) {
            return res.status(400).json({
                error: '',
                message: 'User not found'
            });
        }

        req.files.avatar.name = user.uuid + req.files.avatar.name;

        await req.files.avatar.mv('public/images/avatar/' + req.files.avatar.name, (err) => {
            if (err) {
                res.status(500).json({
                    error: err.toString(),
                    message: 'Error while uploading file'
                });
            }
        })

        await db.user.update({
            where: {
                uuid: user.uuid,
            },
            data: {
                avatar: req.files.avatar.name
            }
        })

        return res.status(200).json({
            error: '',
            message: 'Avatar updated',
            data: {
                avatar:  req.files.avatar.name
            }
        });
    } catch (err){
  console.log(err.toString())
        /**
         * @description returning an error from request
         */
        return res.status(500).send('Server Error');
    }

}

/**
 * @description Exporting only function, because they will be auto discovered.
 * @type {function}
 */
module.exports = AvatarController