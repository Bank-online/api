const Sentry = require('$sentry');
const db = require('$db');
const service_email = require("$services/Mail/index");
const Validator = require("$class/Validator");
const JWT = require('jsonwebtoken')

const yup = require('yup')

/**
 * @generator controller generated by kraaken-cli
 * @param req
 * @param res
 * @description NotificationController
 * @type {Express}
 */
const NotificationController = async (req, res) => {

    try {
        const { uuid } = req.params;

        const schema = yup.object().shape({
            uuid: yup.string().uuid().required()
        })

        if (! await schema.validate({ uuid: uuid})){
            return res.status(400).json({
                message: 'Bad Request',
                errors: schema.errors
            })
        }

        const notifications = await db.notifications.findMany({
            where: {
                user_uuid: uuid
            },
            orderBy: {
                createdAt: 'desc'
            }
        });

        if (notifications){
            return res.status(200).json(notifications)
        }

        return res.status(500).json({
            error: "",
            message: "Notifications not found"
        })
    } catch (err){
        /**
         * @type {Kraaken|prisma}
         * @description Send error to kraaken
         */

        /**
         * @description returning an error from request
         */
        return res.status(500).send({
            error: err.message
        })
    }

}

/**
 * @description Exporting only function, because they will be auto discovered.
 * @type {function}
 */
module.exports = NotificationController